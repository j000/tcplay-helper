#!/bin/bash
# manage truecrypt containers using tcplay

user="$3"
cryptdev="$2"
cryptname="$(basename ${cryptdev:-truecrypt})"

# Trap SIGINT
trap cleanup_on_abort SIGINT

mount_me(){
  # mount container
  if hash udisksctl 2>/dev/null; then
    # udisks2 available
    udisksctl mount -b /dev/mapper/"${cryptname}"
  else
    # use mount
    mountpt="/mnt/${cryptname}"
    [[ -d $mountpt ]] || mkdir "$mountpt"
    # mount options
    if [[ -z ${user+x} ]]; then
      mount /dev/mapper/"$cryptname" "$mountpt"
    else
      mount -o nodev,nosuid /dev/mapper/"$cryptname" "$mountpt"
    fi
  fi
}

unmount_me(){
  # unmount and remove mount point
  if hash udisksctl 2>/dev/null; then
    # udisks2 available
    udisksctl unmount -b /dev/mapper/"${cryptname}"
  else
    # use mount
    mountpt="/mnt/${cryptname}"
    umount "$mountpt"
    [[ -d "$mountpt" ]] && rm -rf "$mountpt"
  fi
}

cleanup_on_abort(){
  printf "%s\n" "Ctrl+C detected, cleaning up."
  cleanup
}

cleanup(){
  devices=$(awk -v dev="$cryptname" -F":" 'dev {print $1}' <(losetup -a))
  unmount_me
  dmsetup remove "$cryptname" || printf "%s\n" "demapping failed"

  while read -r deviceline; do
    losetup -d "$deviceline" || printf "%s\n" "deleting $deviceline failed"
  done <<< "$devices"
}

print_usage(){
  printf "%s\n" "Usage: $0 [Operation] [Container] [OPTIONS]

 create [container] [SIZE]
 open [container] [optional - user to mount as]
 close [container]

The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000)" >&2
}

# must be run as root
if [[ $EUID != 0 ]]; then
  printf "%s\n" "Root permissions required."
  exit 1
fi

# create container and format it as ext4
if [[ $1 == create ]]; then
  if [[ -z ${3+x} ]]; then
    printf "%s\n" "Error: No size argument supplied."
    print_usage
  else
    loopdev=$(losetup -f)
    fallocate -l "$3" "$cryptdev"
    losetup "$loopdev" "$cryptdev"
    tcplay -c -d "$loopdev" -a whirlpool -b AES-256-XTS
    tcplay -m "$cryptname" -d "$loopdev"
    mkfs.ext4 /dev/mapper/"$cryptname"
    sleep 2
    dmsetup remove "$cryptname"
    losetup -d "$loopdev"
  fi

# decrypt and mount container
elif [[ $1 == open ]]; then
  loopdev=$(losetup -f)
  losetup "$loopdev" "$cryptdev"
  tcplay -m "$cryptname" -d "$loopdev"
  if [[ $? != 0 ]]; then
    # something went wrong, free loopdev and exit
    losetup -d "$loopdev"
    exit 1
  fi
  mount_me

# close container and clean up
elif [[ $1 == close ]]; then
  cleanup

# unknown option
else
  print_usage

fi
